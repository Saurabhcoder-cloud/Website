import { PDFDocument, StandardFonts, rgb } from 'pdf-lib';

function drawSectionTitle(page, font, text, position) {
  const { x, y } = position;
  page.drawText(text, {
    x,
    y,
    size: 16,
    font,
    color: rgb(0.1, 0.1, 0.1)
  });
}

function drawField(page, font, label, value, position) {
  const { x, y } = position;
  page.drawText(`${label}: ${value ?? ''}`, {
    x,
    y,
    size: 12,
    font,
    color: rgb(0, 0, 0)
  });
}

export async function generateForm1040Pdf({ form1040, source }) {
  const pdfDoc = await PDFDocument.create();
  const page = pdfDoc.addPage([612, 792]);
  const font = await pdfDoc.embedFont(StandardFonts.Helvetica);

  let cursorY = 742;
  const marginX = 48;

  drawSectionTitle(page, font, 'Form 1040 - TaxHelp AI Preview', { x: marginX, y: cursorY });
  cursorY -= 30;

  if (source?.name) {
    drawField(page, font, 'Source File', source.name, { x: marginX, y: cursorY });
    cursorY -= 18;
  }

  if (source?.mimeType) {
    drawField(page, font, 'File Type', source.mimeType, { x: marginX, y: cursorY });
    cursorY -= 18;
  }

  cursorY -= 6;
  drawSectionTitle(page, font, 'Taxpayer Information', { x: marginX, y: cursorY });
  cursorY -= 24;

  drawField(page, font, 'Social Security Number', form1040?.filer?.social_security_number || 'N/A', {
    x: marginX,
    y: cursorY
  });
  cursorY -= 18;

  drawSectionTitle(page, font, 'Employer', { x: marginX, y: cursorY });
  cursorY -= 24;
  drawField(page, font, 'Name', form1040?.employer?.name || 'N/A', { x: marginX, y: cursorY });
  cursorY -= 18;
  drawField(page, font, 'EIN', form1040?.employer?.identification_number || 'N/A', { x: marginX, y: cursorY });
  cursorY -= 24;

  drawSectionTitle(page, font, 'Income Summary', { x: marginX, y: cursorY });
  cursorY -= 24;
  drawField(page, font, 'Wages (Line 1)', `$${Number(form1040?.wages ?? 0).toFixed(2)}`, { x: marginX, y: cursorY });
  cursorY -= 18;
  drawField(page, font, 'Federal Tax Withheld', `$${Number(form1040?.federal_income_tax_withheld ?? 0).toFixed(2)}`, {
    x: marginX,
    y: cursorY
  });
  cursorY -= 24;

  drawSectionTitle(page, font, 'Tax Summary', { x: marginX, y: cursorY });
  cursorY -= 24;

  const totals = form1040?.totals ?? {};
  drawField(page, font, 'Taxable Income', `$${Number(totals.taxable_income ?? 0).toFixed(2)}`, {
    x: marginX,
    y: cursorY
  });
  cursorY -= 18;
  drawField(page, font, 'Tax Due', `$${Number(totals.tax_due ?? 0).toFixed(2)}`, { x: marginX, y: cursorY });
  cursorY -= 18;
  drawField(page, font, 'Refund', `$${Number(totals.refund ?? 0).toFixed(2)}`, { x: marginX, y: cursorY });
  cursorY -= 18;
  drawField(page, font, 'Status', totals.status || 'N/A', { x: marginX, y: cursorY });

  const footerText = 'Generated by TaxHelp AI. For reference only; review before filing.';
  page.drawText(footerText, {
    x: marginX,
    y: 36,
    size: 10,
    font,
    color: rgb(0.4, 0.4, 0.4)
  });

  const pdfBytes = await pdfDoc.save();
  return Buffer.from(pdfBytes);
}

export default {
  generateForm1040Pdf
};
